// locationspecificglobals.doset more offlocal dofilename "locationspecificglobals.do"/*	Set Location name here!*/global locationname "h1"// global locationname "w1"/*	Put logs from this file someplace.*/local logdirectory "log"capture confirm new file `logdirectory'if _rc==0 {	local logdirectory "`logdirectory'/"	mkdir `logdirectory'	display as text "Log directory created."}else {		local logdirectory "`logdirectory'/"}capture log closelocal fileprefix "`logdirectory'`dofilename'_${locationname}"local filesuffix ".log"local logfilename `fileprefix'`filesuffix'log using "`logfilename'", replace textset memory 500mset matsize 500version 10.1/*	**** LOCAL MACROS, DEFINE THEM HERE ****		If all your files are going to be in the same	directories, it might be advantageous to add	a local macro here.*/local root "C:\Users\Misbah\UOIRP"// local root "~/UOIRP/"/*	Code directory (contains do and ado subdirectories)	All the files will be run from this directory.*/// global projectdirectory "~/UOIRP/data/"// global projectdirectory "C:\Users\Misbah\UOIRP"// global projectdirectory "`root'"global projectdirectory `"`root'UOIRP/"'/*	Stata Utilities Directory*/global statautil "C:\Users\Misbah\Stata-Utilities/"/*	Source data (read only -- original data files)*/// global sourcedatapath ""global sourcedatapath `"`root'data\source/"'/*User data (Such as the data files for funding formula -- doesn't need to be secure).*/// global userdatapath ""global userdatapath `"`root'data\user/"'/*	Working data (read/write, working data files)*/// global workdatapath ""global workdatapath `"`root'data\work/"'/*	Logs (Both generated by programs and manually)*/// global logpath ""global logpath `"`root'data\log/"'// global logpath `"`root'log/"'/*	Manual Logs*/global manuallogpath `"${logpath}manual/"'/*	Output (where charts, etc. go)*/// global outputpath ""// global outputpath `"`root'output/"'global outputpath `"`root'data\output/"'capture log closeclear